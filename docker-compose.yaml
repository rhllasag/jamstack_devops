# Use root/example as user/password credentials
version: '3.1'

services:

  express:
    build:
      context: './../'
      dockerfile: devops/express/Dockerfile
    container_name: node_express_${ENV}
    volumes:
      - ../jam_api/:/var/www/jam_api/:rw
    ports:
    - ${EXPRESSPORT}:${EXPRESSPORT}
    networks:
    - jamstack_net
  flask:
    build:
      context: './../'
      dockerfile: devops/flask/Dockerfile
    container_name: python_flask_${ENV}
    volumes:
      - ../flask_api/:/flask/:rw
    environment:
      MONGODB: ${MONGODB}
      MONGOHOST: ${MONGOHOST}
      MONGOPORT: ${MONGOPORT}
      MONGOUSER: ${MONGOUSER}
      MONGOPASS: ${MONGOPASS}
    ports:
    - ${FLASKPORT}:${FLASKPORT}
    networks:
    - jamstack_net
  mongo:
    image: mongo
    restart: always
    container_name: mongo_${ENV}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGOUSER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGOPASS}
    networks:
    - jamstack_net

  mongo-express:
    image: mongo-express
    restart: always
    ports:
    - ${MONGOEXPRESSPORT}:${MONGOEXPRESSPORT}
    container_name: mongo_express_${ENV}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGOUSER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGOPASS}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGOUSER}:${MONGOPASS}@${MONGOHOST}:${MONGOPORT}/
      ME_CONFIG_BASICAUTH: false
    networks:
    - jamstack_net

networks:
  jamstack_net:
    name: jamstack_net